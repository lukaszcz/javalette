/* flags.h - compiler flags (options) */

#ifndef FLAGS_H
#define FLAGS_H

#include "utils.h"

typedef enum {BACK_QUADR, BACK_I386} backend_type_t;

extern bool f_no_gencode;

/* Optimization options */

extern bool f_optimize;
extern bool f_optimize_local;
extern bool f_optimize_global;
extern bool f_optimize_peephole;

/* File paths */

/* path to the file with runtime assembly routines (or NULL if none needed) */
extern const char *f_runtime_path;
extern const char *f_peephole_rules_file_path;
extern const char *f_data_path;

extern const char *f_output_file;
/* icode output file name -- NULL if the intermediate code should not
   be saved (the default) */
extern const char *f_icode_output_file;

extern const char **f_input_files;
extern int f_input_files_num;

/* General backend options */

extern backend_type_t f_backend_type;

// whether to assemble the output generated by the backend
extern bool f_assemble;
// whether to link the object file into an executable
extern bool f_link;
// whether to preserve intermediate files (assembly)
extern bool f_preserve_files;

/* the number of arguments passed in a register (may be ignored by the
   backend -- only a `hint')*/
extern int f_args_in_reg_num;


/* i386 backend options */

/* Instruction set options */
extern bool f_pentium_pro;


//------------------------------------------------------------------------------

void parse_flags(int argc, char **argv);
void cleanup_flags();

#endif
